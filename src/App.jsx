import React, { useState } from 'react';
import axios from 'axios';
import * as XLSX from 'xlsx';
import './index.css'; // TailwindCSS styles

function App() {
  const [input, setInput] = useState('');
  const [output, setOutput] = useState('');
  const [gherkinFormat, setGherkinFormat] = useState(true);
  const [darkMode, setDarkMode] = useState(false);

  const handleGenerate = async () => {
    try {
      const response = await axios.post('https://test-case-backend-ten.vercel.app/generate-test-cases', {
        input: gherkinFormat ? `Generate test cases in Gherkin format:\n${input}` : input,
      });
      setOutput(response.data.output);
    } catch (error) {
      console.error('Error generating test cases:', error);
      setOutput('❌ Failed to generate test cases.');
    }
  };

  const exportToExcel = () => {
    const rows = output.split('\n\n').map((scenario) => [scenario]);
    const worksheet = XLSX.utils.aoa_to_sheet(rows);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, 'TestCases');
    XLSX.writeFile(workbook, 'generated_test_cases.xlsx');
  };

  return (
    <div className={darkMode ? 'bg-gray-900 text-white min-h-screen' : 'bg-white text-black min-h-screen'}>
      <div className="max-w-4xl mx-auto p-6">
        <div className="flex justify-between items-center mb-6">
          <img src="/bk-icon.png" alt="Burger King Logo" className="h-16" />
          <label className="flex items-center">
            <input
              type="checkbox"
              checked={darkMode}
              onChange={() => setDarkMode(!darkMode)}
              className="mr-2"
            />
            Dark Mode
          </label>
        </div>

        <h1 className="text-2xl font-bold mb-4">🧪 Test Case Generator</h1>

        <textarea
          className="w-full p-3 border rounded mb-4 text-black"
          rows={4}
          placeholder="Enter feature or requirement here..."
          value={input}
          onChange={(e) => setInput(e.target.value)}
        />

        <div className="flex justify-between items-center mb-4">
          <button
            onClick={handleGenerate}
            className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-6 py-2 rounded"
          >
            Generate Test Cases
          </button>

          <label className="flex items-center ml-4">
            <input
              type="checkbox"
              checked={gherkinFormat}
              onChange={() => setGherkinFormat(!gherkinFormat)}
              className="mr-2"
            />
            Gherkin Format
          </label>
        </div>

        {output && (
          <div className="bg-gray-800 text-white p-4 rounded mt-4">
            <p className="text-green-400 font-semibold mb-2">✅ Generated Gherkin Test Cases:</p>
            {output.split(/(?=Scenario:)/g).map((scenario, index) => (
              <pre
                key={index}
                className="bg-gray-900 text-white p-3 rounded mb-4 whitespace-pre-wrap"
              >
                {index === 0 && scenario.startsWith('Feature:')
                  ? scenario
                  : `Scenario:${scenario}`}
              </pre>
            ))}
            <p className="text-yellow-300 text-xs mt-2">
              ⚠️ These test cases are generated by AI and might still make mistakes. Trust human intelligence for final review.
            </p>
            <button
              onClick={exportToExcel}
              className="mt-4 bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded"
            >
              📥 Export to Excel
            </button>
          </div>
        )}
      </div>
    </div>
  );
}

export default App;