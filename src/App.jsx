import React, { useState } from 'react';
import { exportExcel } from './utils/exportExcel';
import './index.css';
import logo from './assets/burger-king-logo.png';
import { saveAs } from 'file-saver';
import * as XLSX from 'xlsx';

export default function App() {
  const [input, setInput] = useState('');
  const [output, setOutput] = useState('');
  const [isGherkin, setIsGherkin] = useState(true);
  const [darkMode, setDarkMode] = useState(false);

  const toggleDarkMode = () => {
    setDarkMode(!darkMode);
    document.documentElement.classList.toggle('dark', !darkMode);
  };

  const handleSubmit = async () => {
    const response = await fetch('https://test-case-backend.onrender.com/generate-test-cases', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ input, gherkin: isGherkin })
    });
    const data = await response.json();
    setOutput(data.testCases);
  };

  const handleExport = () => {
    const blob = new Blob([output], { type: 'text/plain;charset=utf-8' });
    saveAs(blob, 'test-cases.txt');
  };

  const handleExportExcel = () => {
    const rows = output.split('\n').map(line => [line]);
    const worksheet = XLSX.utils.aoa_to_sheet(rows);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, 'Test Cases');
    XLSX.writeFile(workbook, 'test-cases.xlsx');
  };

  return (
    <div className={`min-h-screen p-6 ${darkMode ? 'bg-gray-900 text-white' : 'bg-white text-black'}`}>
      <div className="flex justify-between items-center mb-6">
        <img src={logo} alt="Burger King Logo" className="w-40 h-auto" />
        <div className="flex items-center space-x-4">
          <label className="flex items-center text-sm font-medium">
            <input
              type="checkbox"
              checked={darkMode}
              onChange={toggleDarkMode}
              className="mr-2"
            />
            Dark Mode
          </label>
        </div>
      </div>

      <h1 className="text-3xl font-bold mb-4">Test Case Generator</h1>

      <label className="flex items-center mb-4">
        <input
          type="checkbox"
          checked={isGherkin}
          onChange={() => setIsGherkin(!isGherkin)}
          className="mr-2"
        />
        Gherkin Format
      </label>

      <textarea
        className="w-full p-3 border rounded-md mb-4 text-black"
        rows="5"
        placeholder="Paste acceptance criteria or feature description..."
        value={input}
        onChange={(e) => setInput(e.target.value)}
      ></textarea>

      <button
        className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-6 py-2 rounded-md mr-4"
        onClick={handleSubmit}
      >
        Generate {isGherkin ? 'Gherkin' : 'Regular'} Test Cases
      </button>

      <button
        onClick={handleExport}
        className="bg-green-600 hover:bg-green-700 text-white font-semibold px-4 py-2 rounded-md mr-2"
      >
        Export TXT
      </button>
      <button
        onClick={handleExportExcel}
        className="bg-yellow-600 hover:bg-yellow-700 text-white font-semibold px-4 py-2 rounded-md"
      >
        Export Excel
      </button>

      <div className="mt-6">
        <h2 className="text-xl font-semibold mb-2">Generated Test Cases:</h2>
        <p className="text-sm text-yellow-500 mb-2">
          ‚ö†Ô∏è These test cases are generated by AI and may still contain errors. Please review with your human brain üß†.
        </p>
        <pre className="whitespace-pre-wrap break-words border border-gray-300 dark:border-gray-700 p-4 rounded-md bg-gray-50 dark:bg-gray-800">
          {output || 'No test cases generated yet.'}
        </pre>
      </div>
    </div>
    {testCases.length > 0 && (
  <button
    onClick={() => exportExcel(testCases)}
    className="bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded shadow-md mt-4"
  >
    üì§ Export to Excel
  </button>
)}
  );
}